{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pc\\\\myenergy\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [energyData, setEnergyData] = useState([]);\n  const [forecast, setForecast] = useState(null);\n\n  // Function to fetch energy consumption data or use dummy data\n  const handleFetchData = async () => {\n    // Fetch energy consumption data or use dummy data\n    const data = [{\n      time: '2024-01-01',\n      usage: 50\n    }, {\n      time: '2024-01-02',\n      usage: 45\n    }, {\n      time: '2024-01-03',\n      usage: 55\n    }];\n    setEnergyData(data);\n  };\n\n  // Function to forecast energy consumption using the backend\n  const handleForecastData = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/forecast', {\n        historicalData: energyData.map(entry => entry.usage) // Send usage data\n      });\n      setForecast(response.data.forecastedEnergy); // Set forecasted value from backend\n    } catch (error) {\n      console.error(\"Error fetching forecast:\", error);\n      setForecast('Error in forecasting');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Energy Consumption Forecasting Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Predict and manage your energy usage.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchData,\n        children: \"Load Energy Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleForecastData,\n        children: \"Forecast Energy Consumption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Energy Usage Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: energyData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [entry.time, \": \", entry.usage, \" kWh\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forecasted Energy Consumption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), forecast !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [forecast, \" kWh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click 'Forecast Energy Consumption' to predict.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g7IgUQl3bLXP3GhYDWMvfgQAhx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","energyData","setEnergyData","forecast","setForecast","handleFetchData","data","time","usage","handleForecastData","response","post","historicalData","map","entry","forecastedEnergy","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","_c","$RefreshReg$"],"sources":["C:/Users/Pc/myenergy/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [energyData, setEnergyData] = useState([]);\n  const [forecast, setForecast] = useState(null);\n\n  // Function to fetch energy consumption data or use dummy data\n  const handleFetchData = async () => {\n    // Fetch energy consumption data or use dummy data\n    const data = [\n      { time: '2024-01-01', usage: 50 },\n      { time: '2024-01-02', usage: 45 },\n      { time: '2024-01-03', usage: 55 },\n    ];\n    setEnergyData(data);\n  };\n\n  // Function to forecast energy consumption using the backend\n  const handleForecastData = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/forecast', {\n        historicalData: energyData.map((entry) => entry.usage), // Send usage data\n      });\n      setForecast(response.data.forecastedEnergy); // Set forecasted value from backend\n    } catch (error) {\n      console.error(\"Error fetching forecast:\", error);\n      setForecast('Error in forecasting');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Energy Consumption Forecasting Tool</h1>\n        <p>Predict and manage your energy usage.</p>\n        <button onClick={handleFetchData}>Load Energy Data</button>\n        <button onClick={handleForecastData}>Forecast Energy Consumption</button>\n      </header>\n\n      <div className=\"dashboard\">\n        <h2>Energy Usage Data</h2>\n        <ul>\n          {energyData.map((entry, index) => (\n            <li key={index}>\n              {entry.time}: {entry.usage} kWh\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"forecast\">\n        <h2>Forecasted Energy Consumption</h2>\n        {forecast !== null ? (\n          <p>{forecast} kWh</p>\n        ) : (\n          <p>Click 'Forecast Energy Consumption' to predict.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC;IACA,MAAMC,IAAI,GAAG,CACX;MAAEC,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EACjC;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EACjC;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,CAClC;IACDN,aAAa,CAACI,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,gCAAgC,EAAE;QAClEC,cAAc,EAAEX,UAAU,CAACY,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACN,KAAK,CAAC,CAAE;MAC1D,CAAC,CAAC;MACFJ,WAAW,CAACM,QAAQ,CAACJ,IAAI,CAACS,gBAAgB,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDZ,WAAW,CAAC,sBAAsB,CAAC;IACrC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAQoB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BrB,OAAA;QAAAqB,QAAA,EAAI;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CzB,OAAA;QAAAqB,QAAA,EAAG;MAAqC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5CzB,OAAA;QAAQ0B,OAAO,EAAEnB,eAAgB;QAAAc,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DzB,OAAA;QAAQ0B,OAAO,EAAEf,kBAAmB;QAAAU,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eAETzB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBrB,OAAA;QAAAqB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BzB,OAAA;QAAAqB,QAAA,EACGlB,UAAU,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEW,KAAK,kBAC3B3B,OAAA;UAAAqB,QAAA,GACGL,KAAK,CAACP,IAAI,EAAC,IAAE,EAACO,KAAK,CAACN,KAAK,EAAC,MAC7B;QAAA,GAFSiB,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENzB,OAAA;MAAKoB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBrB,OAAA;QAAAqB,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrCpB,QAAQ,KAAK,IAAI,gBAChBL,OAAA;QAAAqB,QAAA,GAAIhB,QAAQ,EAAC,MAAI;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAErBzB,OAAA;QAAAqB,QAAA,EAAG;MAA+C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACtD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CA1DQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}